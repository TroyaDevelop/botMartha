import random
import vk_api
from vk_api import VkUpload
from config import token
import time
import json
from controllers.profileController import ProfileController

profile_controller = ProfileController()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –∏ API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
vk_session = vk_api.VkApi(token=token)
vk = vk_session.get_api()
upload = VkUpload(vk)  # –µ–¥–∏–Ω—ã–π –æ–±—ä–µ–∫—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫–∞

MAX_RETRIES = 10  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
RETRY_DELAY = 15  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π –≤ —Å–µ–∫—É–Ω–¥–∞—Ö


def _upload_photo(path: str) -> str:
    photo = upload.photo_messages(path)[0]
    return f"photo{photo['owner_id']}_{photo['id']}"


def _upload_doc(path: str, peer_id: int, doc_type: str | None = None) -> str:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç (–≤–∫–ª—é—á–∞—è GIF) –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç attachment.

    `VkUpload.document_message` –≤ —Ä–∞–∑–Ω—ã—Ö –≤–µ—Ä—Å–∏—è—Ö vk_api –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–∏–±–æ —Å–ø–∏—Å–æ–∫ —Å
    –æ–¥–Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º, –ª–∏–±–æ —Å–ª–æ–≤–∞—Ä—å –≤–∏–¥–∞ `{"doc": {..}}`. –ë–µ—Ä—ë–º –æ–±–∞ —Å–ª—É—á–∞—è.
    """

    if doc_type:
        raw = upload.document_message(path, peer_id=peer_id, doc_type=doc_type)
    else:
        raw = upload.document_message(path, peer_id=peer_id)

    # --- –£–Ω–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –∫ —Å–ª–æ–≤–∞—Ä—é —Å –ø–æ–ª—è–º–∏ owner_id / id ---
    if isinstance(raw, list):
        doc_dict = raw[0]
    elif isinstance(raw, dict):
        doc_dict = raw.get("doc", raw)  # –µ—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ –∫–ª—é—á 'doc'
    else:
        raise RuntimeError("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ VK API –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞")

    owner_id = doc_dict["owner_id"]
    doc_id   = doc_dict["id"]
    return f"doc{owner_id}_{doc_id}"


def send_message(
    peer_id: int,
    message: str,
    *,
    image_path: str | None = None,
    gif_path: str | None = None,
    doc_path: str | None = None,
) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ. –û–¥–∏–Ω –∏–∑ *path –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–¥–∞–Ω.*

    - image_path ‚Üí –≤–∫–ª–∞–¥—ã–≤–∞–µ–º –∫–∞–∫ photo (jpeg/png)
    - gif_path   ‚Üí **–¥–æ–∫—É–º–µ–Ω—Ç** —Ç–∏–ø–∞ GIF
    - doc_path   ‚Üí –ª—é–±–æ–π doc (txt/pdf/zip) –∏–ª–∏ gif, –µ—Å–ª–∏ gif_path –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω
    """

    attempts = 0
    while attempts < MAX_RETRIES:
        try:
            attachment: str | None = None

            if image_path:
                attachment = _upload_photo(image_path)
            elif gif_path:
                attachment = _upload_doc(gif_path, peer_id, doc_type="gif")
            elif doc_path:
                attachment = _upload_doc(doc_path, peer_id)

            vk.messages.send(
                peer_id=peer_id,
                message=message,
                attachment=attachment,
                random_id=0,
            )
            break
        except vk_api.VkApiError as e:
            attempts += 1
            if attempts < MAX_RETRIES:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ {RETRY_DELAY} —Å.")
                time.sleep(RETRY_DELAY)
            else:
                print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.")


def get_user_name(user_id: int) -> str:
    nickname = profile_controller.get_nickname(user_id)
    if nickname:
        return nickname

    user_info = vk.users.get(user_ids=user_id)
    if user_info:
        first_name = user_info[0].get("first_name", "")
        last_name = user_info[0].get("last_name", "")
        return f"{first_name} {last_name}".strip()
    return "–¥—Ä—É–≥"

# -------- ¬´–∏–ª–∏¬ª-–≤—ã–±–æ—Ä --------

def choose_option(text: str) -> str | None:
    lower = text.lower().strip()
    if " –∏–ª–∏ " in lower and lower.startswith("–º–∞—Ä—Ç–∞"):
        options = [opt.strip() for opt in lower[5:].split(" –∏–ª–∏ ") if opt.strip()]
        if len(options) >= 2:
            return random.choice(options)
    return None

# -------- –°–ø—Ä–∞–≤–∫–∞ –∏ –∞–Ω–µ–∫–¥–æ—Ç—ã --------
help_message = (
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –∫–æ–º–∞–Ω–¥–∞–º–∏:\n\n"
    "–î—É—ç–ª—å ‚Äî –≤—ã–∑—ã–≤–∞–µ—Ç –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–∞ –¥—É—ç–ª—å.\n"
    "–ê–Ω–µ–∫–¥–æ—Ç ‚Äî –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç.\n"
    "–ë—Ä–∞–∫ ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∑–∞–∫–ª—é—á–∏—Ç—å –±—Ä–∞–∫ —Å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.\n"
    "–î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫—É–±–∞–º –Ω–∞–ø–∏—à–∏ '/–ø–æ–º–æ—â—å'.\n\n"

    "üéØ –†–£–°–°–ö–ê–Ø –†–£–õ–ï–¢–ö–ê\n"
    "–†—É–ª–µ—Ç–∫–∞ ‚Äî –Ω–∞—á–∞—Ç—å –Ω–∞–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤.\n"
    "–†—É–ª–µ—Ç–∫–∞ –≤—Å—Ç—É–ø–∏—Ç—å ‚Äî –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è.\n"
    "–†—É–ª–µ—Ç–∫–∞ –Ω–∞—á–∞—Ç—å ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É.\n\n"

    "üé≤ –õ–û–¢–û\n"
    "–õ–æ—Ç–æ - —Å–æ–∑–¥–∞–µ—Ç –ª–æ–±–±–∏ –¥–ª—è –∏–≥—Ä—ã –≤ –ª–æ—Ç–æ.\n"
    "–õ–æ—Ç–æ –≤—Å—Ç—É–ø–∏—Ç—å - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ –≤ –ª–æ—Ç–æ.\n"
    "–õ–æ—Ç–æ –Ω–∞—á–∞—Ç—å - –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π).\n"
    "–õ–æ—Ç–æ —á–∏—Å–ª–æ - –≤—ã—Ç—è–Ω—É—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ (—Ç–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π).\n"
    "–õ–æ—Ç–æ –∫–∞—Ä—Ç–æ—á–∫–∞ - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç–æ—á–∫—É.\n"
    "–õ–æ—Ç–æ —á–∏—Å–ª–∞ - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –≤—ã—Ç—è–Ω—É—Ç—ã–µ —á–∏—Å–ª–∞.\n"
    "–õ–æ—Ç–æ —Å—Ç–æ–ø - –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π).\n"
)


def get_random_joke() -> str:
    with open("data/jokes.json", "r", encoding="utf-8") as f:
        jokes = json.load(f)
    return random.choice(jokes)

# -------- –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ --------

def _reaction_template(action_verb: str, emoji: str, user_id: int, reply_message) -> str:
    if reply_message:
        target_id = reply_message["from_id"]
        return f"{get_user_name(user_id)} {action_verb} {get_user_name(target_id)} {emoji}"
    return f"{get_user_name(user_id)} {action_verb} —Å–µ–±—è {emoji}"


def hug_command(user_id, reply_message):
    return _reaction_template("–æ–±–Ω–∏–º–∞–µ—Ç", "ü§ó", user_id, reply_message)


def kiss_command(user_id, reply_message):
    return _reaction_template("—Ü–µ–ª—É–µ—Ç", "ü•∞", user_id, reply_message)


def bonk_command(user_id, reply_message):
    return _reaction_template("–±–æ–Ω—å–∫–∞–µ—Ç", "üî®", user_id, reply_message)


def slap_command(user_id, reply_message):
    return _reaction_template("—à–ª—ë–ø–∞–µ—Ç", "üòè", user_id, reply_message)

# -------- –°–∂–µ—á—å --------

def burn_command(user_id, reply_message):
    burn_images = [
        "img/burn1.jpg",
        "img/burn2.jpg",
        "img/burn3.jpg",
    ]
    msg = _reaction_template("—Å–∂–∏–≥–∞–µ—Ç", "üî•", user_id, reply_message)
    return msg, random.choice(burn_images)

# -------- –°–æ–∂—Ä–∞—Ç—å (GIF –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç) --------

def devour_command(user_id, reply_message):
    devour_docs = [
        "gif/DreadybearTrueJumpscare.gif",
    ]
    msg = _reaction_template("—Å–∂–∏—Ä–∞–µ—Ç", "üòà", user_id, reply_message)
    return msg, random.choice(devour_docs)
